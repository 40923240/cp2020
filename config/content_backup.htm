<h1>HomePage</h1>
<p><img alt="" height="266" src="/images/coding.jpg" width="507"/></p>
<p>This class is <strong>"</strong><em><span style="color: #ff6600;">Introduction of Computer Science</span></em><strong>"</strong></p>
<p><em><strong><span style="color: #ff6600;">I'm K</span></strong></em></p>
<p><em><strong><span style="color: #ff6600;">welcome to my webside.</span></strong></em></p>
<p><strong><span style="color: #ff6600;"><span style="color: #000000;">課程心得:</span></span></strong></p>
<p>從一開始的網路設定,到第一次當上組長並進行小組分工作業,都讓我學到很多,像是如果用學校的電腦的話要將原本的IPV4位置改成IPV6才能進行上網,</p>
<p>與使用"<span style="color: #000000;">ipconfig"</span>來查看自己的連線情況,而HW1的翻譯教材讓我學到了有關光纖網路的知識,</p>
<p>包括傳輸的速度、距離與方式,都讓我感到驚奇,想著原來我們平常所使用的東西居然這麼的厲害啊。而在這個階段我也常常幫助同學排除錯誤的地方,雖然蠻累的,但也算是學到了各種解決錯誤的方法。</p>
<p>我認為自己在進行HW2的期間算是有觸碰到一點coding的邊緣,通過修改老師的亂數分組代碼,進而學到了像是"<span style="color: #000000;">for迴圈、random模塊的運用</span></p>
<p>",在這個階段同學們雖會有問題產生,但基本上都是些操作錯誤與不熟悉語法所導致的,而到了HW3才真正是在針對需求去產出自己需要的程式。</p>
<p>總結:在這堂課上需要能靈活運用各種方法去達成目的,而真正重要的是可以觀察細節進而解決問題,並且分享如何處理該問題。</p>
<p>自評分數:70分</p>
<p><span style="background-color: #000000; color: #ff6600;">Github</span>:<a href="https://github.com/40923240/cp2020">https://github.com/40923240/cp2020</a></p>
<p><span style="color: #ff6600; background-color: #000000;">Gitlab</span>:<a href="https://gitlab.com/40923240/cp2020">https://gitlab.com/40923240/cp2020</a></p>
<p><span style="color: #ff6600; background-color: #000000;">Kaggle</span>:<a href="https://www.kaggle.com/gg542466/cp2020w8">https://www.kaggle.com/gg542466/cp2020w8</a></p>
<p><span style="background-color: #000000; color: #ff6600;">Heroku</span>:<a href="https://dashboard.heroku.com/apps">https://dashboard.heroku.com/apps</a></p><h1>Video</h1><h2>架設倉儲</h2>
<h2>設置SSH-KEY</h2>
<p>Video <span>link:<a href="https://youtu.be/0-wWg07TfuA">https://youtu.be/0-wWg07TfuA</a></span></p>
<p></p>
<h1>Schedule</h1><h2>HW1 ALL(100%)</h2>
<p><span style="color: #ff0000;">日期有相同黑框者並鄰近者,代表為同一章節</span></p>
<p><strong><span style="color: #ff99cc;"></span></strong><span style="color: #ff6600;"><span style="background-color: #000000;">10/13</span> PCH11:Fiber-Optic-Cable/光纖電纜(75%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/14</span> PCH11:Fiber-Optic-Cable/光纖電纜(100%)</span></p>
<p><span style="color: #ff6600;">10/19 PCH11:Twisted Pair Cable/雙絞線(100%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/19</span> PCH11:Coaxial Cable/同軸電纜(80%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/20</span> PCH11:Coaxial Cable/同軸電纜(100%)</span></p>
<p><span style="color: #ff6600;">10/21 PCH11:Copper vs. Fiber/銅vs.光纖(100%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/23</span> PCH11:Converters/<span lang="zh-TW">轉換器(50%)</span></span></p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/24</span> PCH11:Converters/<span lang="zh-TW">轉換器(100%)</span></span></p>
<p><span style="color: #ff0000;"><span style="background-color: #000000;">10/24</span> 更新組員名單與重新排版工作進度表。</span></p>
<p><span style="color: #ff6600;">10/24 PCH12:Ethernet Standards/以太網標準(100%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/28</span> PCH12:Ethernet Technology/以太網技術(20%)</span></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">10/28</span> PCH12:Ethernet Technology/以太網技術(100%)</span></p>
<div class="tw-ta-container hide-focus-ring tw-nfl"><span style="color: #ff6600;">10/29 PCH12:Carrier Sense Multiple Access/Collision Detect|載波偵聽多路訪問/衝突檢測(100%)</span></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"><span style="color: #ff0000; background-color: #000000;">10/29</span> <span style="color: #ff0000;">更新組員名單中的GitHub網址/更新工作進度表與總進度%數。</span></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"><span style="color: #ff9900;"><span style="color: #ff0000; background-color: #000000;">10/29</span><span><span style="color: #ff0000;"> 更新</span></span><span style="color: #ff0000;">錯誤排除紀錄中的網站限制/更新HomePage </span></span><span style="color: #ff0000;">2.0</span></div>
<div class="tw-ta-container hide-focus-ring tw-nfl">
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0"><span style="color: #ff6600;">10/29 PCH 12:Evolution of Standards/標準的演變(100%)</span></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><span style="color: #ff9900;"><span style="color: #ff0000;"><span style="background-color: #000000;">10/29</span> 更新錯誤排除紀錄中的Heading無法轉換問題</span></span></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><span style="color: #ff6600;">10/31 PCH 12 Planning a Basic Network Connection Using 100 or 1000BaseT/使用100或1000BaseT規劃基本網絡連接(100%)</span></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><span style="color: #ff9900;"><span style="color: #ff0000;"><span style="background-color: #000000;">10/31</span> Up date Homepage 2.5</span></span></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><span style="color: #ff6600;">11/1   PCH12:Differentiating Between Ethernet and TCP/IP(在以太網和TCP / IP之間進行區分)<br/>(100%)</span></div>
<div class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"></div>
<h2>HW2</h2>
<p><span style="color: #ff6600; background-color: #000000;"><span style="background-color: #ffffff;">11/25 開始進行HW2的作業(10%)</span></span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">11/26 HW2 2-1 coding (30%)</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">11/27 HW2 2-1 coding (60%)</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">11/29 HW2 2-1 coding (100%)</span></p>
<p><span style="color: #ff6600; background-color: #000000;"><span style="background-color: #ffffff;"> <span style="color: #ff6600;">1</span></span></span><span style="color: #ff6600;"><span style="background-color: #ffffff;">/10 HW2 2-1 c</span><span lang="en">ommentary about </span><span style="background-color: #ffffff;">coding </span><span style="background-color: #ffffff;">(100%)</span></span></p>
<h2>HW3 ALL(100%)</h2>
<p><span style="color: #ff6600; background-color: #ffffff;">12/14 開始進行HW3的作業</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">12/14 HW3 Ex.08 coding (100%)</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">12/16 HW3 Ex.08 coding (100%)</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;">12/21 <span>HW3<span> </span></span><span>Ex</span><span>.08 translate</span> (100%)</span></p>
<p><span style="color: #ff6600; background-color: #ffffff;"><span>12/22 </span><span>HW3<span> </span></span><span>Ex</span><span>.07 translate</span><span> (100%)</span></span></p>
<p><span style="color: #ff6600; background-color: #ffffff;"><span>12/22 <span>HW3<span> </span></span><span>Ex</span><span>.17 translate</span><span> (40%)</span></span></span></p>
<p><span style="color: #ff6600; background-color: #ffffff;"><span>12/22 HW3 Ex.17 translate (100%)</span></span></p>
<h2>網站更新</h2>
<p><span style="color: #ff6600;">1/10更新課程心得</span></p>
<p></p><h1>Group2 List</h1>
<p><span style="color: #ff6600; background-color: #ffffff;"></span></p>
<p>組長:</p>
<p><span style="color: #ff6600; background-color: #000000;">40923240 蔡宗瑋</span> CMSIMDE:https://40923240.github.io/cp2020/content/index.html</p>
<p><span>GitHub:</span><a href="https://github.com/40923240/cp2020/commits/master">https://github.com/40923240/cp2020/commits/master </a></p>
<p>組員:</p>
<p><span style="color: #ff6600; background-color: #000000;">40923228 黃翊訓</span> <span>CMSIMDE:</span><a href="https://40923228.github.io/cp2020/content/index.html">https://40923228.github.io/cp2020/content/index.html</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923228/cp2020/commits/master">https://github.com/40923228/cp2020/commits/master </a></p>
<p><span style="color: #ff6600;"><span style="background-color: #000000;">40923201 翁郁琳</span></span> CMSIMDE:<a href="https://40923201.github.io/cp2020/content/index.html">https://40923201.github.io/cp2020/content/index.html</a></p>
<p>GitHub:<a href="https://github.com/40923201/cp2020/commits/master">https://github.com/40923201/cp2020/commits/master </a></p>
<p><span style="color: #ff9900;"><span style="background-color: #000000; color: #ff6600;">40923231 楊子頡</span> </span><span>CMSIMDE:</span><a href="https://40923231.github.io/cp2020/content/index.html">https://40923231.github.io/cp2020/content/index.html</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923231/cp2020/commits/master">https://github.com/40923231/cp2020/commits/master </a></p>
<p><span style="color: #ff9900;"><span style="background-color: #000000; color: #ff6600;">40923218 陳柏宇</span> </span><span>CMSIMDE:</span><a href="https://40923218.github.io/cp2020/content/index.html">https://40923218.github.io/cp2020/content/index.html</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923218/cp2020/commits/master">https://github.com/40923218/cp2020/commits/master </a></p>
<p><span style="color: #ff6600; background-color: #000000;">40923219 陳柏成</span> <span>CMSIMDE:</span><a href="https://409232194.github.io/cp2020/content/About.html">https://409232194.github.io/cp2020/content/About.html</a></p>
<p><span>GitHub:<a href="https://github.com/409232194/cp2020/commits/master">https://github.com/409232194/cp2020/commits/master</a></span></p>
<p><span style="background-color: #000000; color: #ff6600;">40923250 謝帆峻</span> <span>CMSIMDE:</span><a href="https://40923250.github.io/cp2020/content/index.html">https://40923250.github.io/cp2020/content/index.html</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923250/cp2020/commits/master">https://github.com/40923250/cp2020/commits/master </a></p>
<p><span style="color: #ff6600; background-color: #000000;">40923202 許芷盈</span> <span>CMSIMDE:</span><a href="https://40923202.github.io/cp2020/content/index.html">https://40923202.github.io/cp2020/content/index.html</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923202/cp2020/commits/master">https://github.com/40923202/cp2020/commits/master </a></p>
<p><span style="background-color: #000000; color: #ff6600;">40923232 楊昀昇</span> <span>CMSIMDE:</span><a href="https://40923232.github.io/cp2020/content/index.html">https://40923232.github.io/cp2020/content/index.htm</a></p>
<p><span>GitHub:</span><a href="https://github.com/40923232/cp2020/commits/master">https://github.com/40923232/cp2020/commits/master </a></p>
<p><span style="color: #ff6600; background-color: #000000;">40523148 嚴伯陞</span> <span>CMSIMDE:</span><a href="https://40923248.github.io/cp2020/content/index.html">https://40923248.github.io/cp2020/content/index.htm</a></p>
<p><span>GitHub:<a href="https://github.com/40523148/cp2020/commits/master">https://github.com/40523148/cp2020/commits/master</a></span></p>
<p><span style="color: #ff6600; background-color: #000000;">40923247 蕭煒騰</span> <span>CMSIMDE:</span><a href="https://40923247.github.io/cp2020/content/index.html">https://40923247.github.io/cp2020/content/index.htm</a></p>
<p><span>GitHub:<a href="https://github.com/40923247/cp2020/commits/maser">https://github.com/40923247/cp2020/commits/maser</a></span></p>
<p><span style="color: #ff6600; background-color: #000000;">40923248 賴胤瑞</span> <span>CMSIMDE:</span><a href="/40923247 蕭煒騰 CMSIMDE:https:/40923247.github.io/cp2020/content/index.htm  GitHub:https:/github.com/40923248/cp2020/commits/maser">https://40923248.github.io/cp2020/content/index.htm</a></p>
<p><span>GitHub:<a href="https://github.com/40923248/cp2020/commits/maser">https://github.com/40923248/cp2020/commits/maser</a></span></p>
<p><span> </span></p><h1>Debug</h1>
<p><span style="color: #000000;"><em><strong>1.</strong></em></span><span style="color: #ff6600;">切換至</span><span style="color: #ff6600;">2階時靜態404的錯誤。</span></p>
<p><span style="color: #ff6600;">解決辦法:要轉成2階的名稱裡不能有</span><span style="color: #000000;"><strong>" / :</strong></span><span style="color: #ff6600;">這些符號</span></p>
<p><span style="color: #ff6600;"><span style="color: #000000;"><em><strong>2.</strong></em></span>進入9443出現error。</span></p>
<p><span color="#ff6600" style="color: #ff6600;">解決辦法:將y:的cp2020刪除後,</span><span color="#ff6600" style="color: #ff6600;">用<span>git clone --recurse-submodules URL.git的指令重抓進隨身碟後,</span></span><span color="#ff6600" style="color: #ff6600;">重開啟9443就可以了,網站上的紀錄跟出事前會是一樣的。</span></p>
<p><span color="#ff6600" style="color: #ff6600;"><span style="color: #000000;"><em><strong>3.</strong></em></span>用隨身碟C:與y:做完後有save+轉靜態，但是在git pull卡住了,隨後雖然push</span><span color="#ff6600" style="color: #ff6600;">上去，但是遠端跟近端無法同步。</span></p>
<p><span color="#ff6600" style="color: #ff6600;"><span>解決辦法:將y:的cp2020刪除後,<span color="#ff6600" style="color: #ff6600;">用<span>git clone --recurse-submodules URL.git的指令重抓進隨身碟然後就ok了, </span></span></span></span><span color="#ff6600" style="color: #ff6600;">by a.m.2:27</span></p>
<p><strong>4.</strong><span style="color: #ff6600;">9443上save，隨後變成404 not found。</span></p>
<p><span color="#ff6600" style="color: #ff6600;">解決方法:edit add 的&lt;&gt;全選複製後，去y:&gt;tmp&gt;cp2020&gt;config裡的content.htm</span></p>
<p><span color="#ff6600" style="color: #ff6600;">貼上覆蓋(這裡使用白窗做)，然後按save,然後重上9443重新整理就好了。</span></p>
<p><strong><span color="#ff6600">5.</span></strong><span color="#ff6600" style="color: #ff6600;">遭遇轉換Headnig無效。</span></p>
<p><span style="color: #ff6600;">解決方法:將想切換成Heading的那行backsapace到上一行,然後再enter跳行手打你要的那段文字,打完<span>切換成Heading</span>,然後就可以了。</span></p>
<p><strong><span style="color: #000000;">6.<img alt="" height="126" src="/images/未命名1.png" width="578"/></span></strong><span style="color: #000000;">打完python wsgi.py後出現以上問題。</span></p>
<p><span style="color: #ff6600;">解決方法:<span>因為 update cmsimde 後, 其中的 up_dir/init.py 已經增加兩個變數, 所以必須要將 init.py 複製取代到cp2020裡。</span></span></p><h1>HW1</h1>
<p style="text-align: center;"><span style="color: #ff99cc;"><strong>使用教材:PC Hardware</strong></span></p>
<p style="text-align: center;"><span style="color: #ff99cc;"><strong>    負責章節為:PCH11</strong><em><strong><br/><img alt="" src="/images/index.html" style="float: left;"/></strong></em></span></p>
<p style="text-align: center;"><span style="color: #ff99cc;"><span style="background-color: #000000;"><strong><span style="background-color: #ffffff;">     </span></strong></span><strong><span> </span>       <span> </span><span style="background-color: #ffffff;">      </span></strong><span style="background-color: #ffffff;"><strong>PCH:12</strong></span></span></p>
<p><img alt="" height="492" src="/images/333333.jpg" width="486"/></p>
<h2>PCH 11 Networking Media(網絡媒體)</h2>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p>1.Identify types of network cables and connectors.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">識別網絡電纜和連接器的類型。</span></pre>
</div>
<p>2.Categorize characteristics of connectors and cabling.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">分類連接器和電纜的特性。</span></pre>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"></div>
<h3>PCH 11 Fiber-Optic-Cable(光纖電纜)</h3>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p>Identify types of network cables and connectors.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">識別網絡電纜和連接器的類型。</span></pre>
<p style="text-align: center;"><span style="color: #ff0000;">overview/概觀</span></p>
<p>In this module, we’re going to discuss the various types of network media. We will begin with fiber-optic cable and then discuss twisted pair cable and coaxial cable. For each of these cable types, we will discuss appearance, characteristics, and types of connectors, as well as speed and limitations.</p>
<p class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0"><span lang="zh-TW">在本模塊中，我們將會討論到各種類型的網絡媒體。我們將會從光纖電纜開始，然後討論雙絞線電纜和同軸電纜。對於每種電纜的類型，我們將會討論連接器的外觀，特性和類型，以及速度和限制。</span></p>
<p class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><strong><span style="text-decoration: underline;"><span style="color: #ff0000; text-decoration: underline;">Fiber-Optic-Cable(光纖電纜)</span></span></strong></p>
<p class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0"><strong><img alt="" height="335" src="/images/image1.png" width="312"/></strong></p>
<p class="tw-ta-container hide-focus-ring tw-lfl" tabindex="0">Fiber-optic cables are constructed by using a glass core at the center of the cable that is surrounded by cladding. In order to send data from one end of the cable to the other, light from a light-emitting diode (LED) or laser is used to transmit the signal down the glass fiber at the center of the cable. Because the data is being transmitted using light, it is immune to the effects of electromagnetic interference (EMI) that impact traditional copper-based cables, such as twisted pair and coaxial cables. Fiber-optic cables possess the ability to send the data a very far distance (many miles) without the use of a repeater. They also can carry a significant amount of data due to their large bandwidth and the information traveling at light speed. Their bandwidth can be measured in gigabits or even terabits per second. There are two types of fiber cables: multimode and single-mode fiber.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">光纖電纜是通過在電纜的中心使用玻璃芯製成的，該玻璃芯被層層圍繞。<br/>為了將數據從電纜的一端發送到另一端，使用來自發光二極管（LED）或是使使用雷射的光線沿電纜中心的玻璃纖維向下傳輸信號。<br/>由於數據是通過光傳輸的，因此不受電磁干擾（EMI）的影響，這些電磁干擾會影響傳統的銅基電纜，如雙絞線和同軸電纜。<br/><span style="color: #ff0000;">光纖有無需使用中繼器就可傳輸到很遠的距離（許多英里）發送數據的能力</span>。由於它們的大帶寬和以光速傳播的信息，此外它們還可以攜帶大量數據。<br/>它們的帶寬可以<span style="color: #ff0000;">以每秒1GB甚至是1TB的速度來測量</span>。而光纖電纜有兩種類型：<span style="color: #ff0000;">多模光纖與單模光纖</span>。<br/><br/><span style="color: #ff99cc;">(多模光纜):</span><br/>Multimode fiber cables (MMF) contain a larger core than the single-mode variety. The core size for <br/>a multimode fiber is 62.5 microns. A micron is a very small unit of measurement—it is actually even<br/>smaller than the width of a human hair. MMF’s larger core enables multiple modes of travel for the light<br/>from one end of the cable to the other. This allows a single fiber to carry multiple signals across it, with<br/>each signal being transmitted at a slightly different reflective angle. When the light reaches the destination, <br/>the signals are then converted back into 1s and 0s and passed to the computer by the network interface card.<br/>Multimode fiber is commonly used in shorter distance fiber connections, such as from a router to a switch, a <br/>switch to a switch, or a server to a switch<br/><br/></span><span lang="zh-TW">多模光纜（MMF）的芯線比單模光纜大。多模光纖的纖芯尺寸為62.5微米。微米是非常小的測量單位，實際上甚至比人類頭髮的寬度還小。<br/>MMF的較大的芯線實現了從電纜一端到另一端的多種傳播模式。這樣一來，單根光纖就可以在其上傳輸多個信號，而每個信號的反射角度都會稍有不同。<br/>當光到達目的地時，信號會被轉換回1和0，然後通過網絡接口卡傳遞到電腦中。<br/><span style="color: #ff0000;">多模光纖通常用於較短距離的光纖連接中</span>，例如從路由器到交換機，從交換器到交換器或從服務器到交換器。<br/><span style="color: #ff99cc;"><br/>(單模光纜):</span><br/>Single-mode fiber cables (SMF) contain a much smaller core than the multimode variety. The core size for SMF <br/>is 10 microns. SMF’s smaller core only allows for a single mode of travel for the light from one end of the <br/>cable to the other. This straight-through connection allows for data to travel longer distances without a repeater<br/>than it can travel using MMF. When the light reaches the destination, the signals are then converted back into 1s <br/>and 0s and passed to the computer by the network interface card. Single mode fiber is commonly used in very long distance <br/>fiber connections, such as a backbone connection from one local area network to another.<br/><br/></span></pre>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">單模光纜（SMF）的芯線比多模光纜小得多。SMF的芯尺寸為10微米。SMF的較小芯線僅允許光從電纜一端到另一端的單一傳播模式。<br/>這種直通連接允許數據在沒有中繼器的情況下傳輸更長的距離，而無法使用MMF進行傳輸。當光到達目的地時，</span><span lang="zh-TW">然後</span><span lang="zh-TW">信號被轉換回1和0，<br/>然後通過網絡接口卡傳遞到電腦。單模光纖通常用於超長距離的光纖連接中，例如從一個局域網到另一個局域網的骨干連接。<br/><br/></span><span style="text-decoration: underline;"><span style="color: #ff0000; text-decoration: underline;">Fiber-Optic Cable Connectors(光纖電纜連接器)</span></span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">Fiber cables only come in the two types discussed above: single-mode and <br/>multimode. However, the ends of each of these cables come in four varieties.<br/><br/>光纖電纜僅屬於上述兩種類型：單模和多模。然而，每條電纜的末端都有四種種類。<br/><br/>The subscriber connector (SC) is a fiber-optic cable connector that uses a push-pull mechanism to latch into<br/>the port, similar to common audio and video cables. If you want to enable bidirectional transmission for sending<br/>and receiving data, you need to have two fiber cables, so sometimes a dual SC connector is used.<br/><br/></span></p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><span style="color: #ff99cc;">用戶連接器（SC）</span>是一種光纖電纜連接器，類似於普通的音頻和影片電纜，它使用推挽機制鎖入端口。<br/>如果要啟用雙向傳輸以發送和接收數據，則需要兩條光纖電纜，因此有時會使用雙SC連接器。<br/><br/>The straight tip (ST) connector is a fiber-optic cable connector that uses a bayonet plug and socket.<br/>It was the first de facto standard connector for most commercial wiring using fiber cables and it is very <br/>commonly found in fiber networks.<br/><br/></span></p>
</div>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><span style="color: #ff99cc;">筆直型（ST）連接器</span>是使用卡口插頭和插座的光纖電纜連接器。它是大多數使用光纖電纜進行商業佈線的第一個實際使用的標準連接器，<br/>並且在光纖網絡中非常常見。<br/><br/>The Lucent connector (LC) is a miniaturized version of the fiber-optic SC connector. It looks somewhat like the SC, <br/>but is half the size, with a 1.25 mm ferrule instead of 2.5 mm, making it very useful when connecting multiple devices in a small area, <br/>such as on a 24-port switch’s front panel.<br/><br/></span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><span style="color: #ff99cc;">朗訊連接器（LC）</span>是光纖SC連接器的微型版本。它看上去有點像SC，但尺寸只有一半，只有1.25毫米而不是2.5毫米的芯,因此在小區域（例如使用24端口交換機的前面板）連接多個設備時非常有用。<br/><br/>The mechanical transfer-registered jack (MT-RJ) connector is a fiber-optic cable connector that is very popular for small-form-factor<br/>devices due to its small size. This connector houses two fibers and mates with locating pins on the plug. These connectors are commonly <br/>found connecting a switch to a patch panel, because both devices have a limited area on their front panels.<br/></span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><span style="color: #ff99cc;">機械傳輸註冊插孔（MT-RJ）連接器</span>是一種光纖電纜連接器，由於其尺寸小，在小型設備中非常受歡迎。</span><span lang="zh-TW">該連接器容納兩根光纖，並與插頭上的定位銷配對。</span><span lang="zh-TW">通常這些連接器會將開關連接到配線架，因為兩個設備的前面板都有有限的區域。</span></p>
<h3>PCH 11 Twisted-Pair-Cable(雙絞線電纜)</h3>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">1.</span>Identify types of network cables and connectors.</pre>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">識別網絡電纜和連接器的類型。<br/></span><br/>2.Categorize characteristics of connectors and cabling.</pre>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">分類連接器和電纜的特性。<br/></span></pre>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container" style="text-align: center;"><span style="color: #ff99cc;">START</span></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"><span>While fiber-optic cable is great for its speed, distance, and security, it hasn’t yet become commonplace in most networks. Instead, we are still using the same type of cabling we have been using for the past two to three decades — twisted pair. Twisted pair cable is the most popular physical LAN media in the world today. Each cable contains four pairs of individually insulated strands of copper wire. Each pair is twisted together to minimize the amount of electromagnetic interference (EMI). The more twists there are in the cable, the less EMI there will be. Twisted pair cable is broken up into two types: unshielded twisted pair (UTP) and shielded twisted pair (STP).</span></div>
<div class="tw-ta-container hide-focus-ring tw-nfl"></div>
</div>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">儘管光纜在速度、距離和安全性方面都非常出色，但在大多數網絡中還尚未普及。<br/>相反的，我們仍在使用過去兩到三十年來一直使用的相同類型的電纜-雙絞線電纜。<br/>雙絞線電纜是當今世界上最流行的<span>物理媒介</span>。每條電纜包含四對獨立絕緣的銅線。<br/>每對絞合在一起以最大程度地減少電磁干擾（EMI）。<span style="color: #ff0000;">電纜中的扭曲越多，EMI越小。</span><br/><span style="color: #ff0000;">雙絞線分為兩種類型：非屏蔽雙絞線（UTP）和屏蔽雙絞線（STP）</span>。<br/><br/></span></pre>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span style="color: #ff99cc;"><strong><span lang="zh-TW">光纖連接器</span></strong></span><span lang="zh-TW"><br/><img alt="" height="416" src="/images/image6.png" width="350"/><br/><br/></span></pre>
<p id="N1069C" lang="">Shielded twisted pair cable is built very similarly to unshielded twisted pair, except that the pairs of wires are also surrounded by a metallic shielding (like foil). This outer foil shielding minimizes the EMI to which the cable is exposed. This increases the security and reliability of the cable. Unfortunately, however, this also increases the cost of the cable, so it is typically used only in high-production environments where the extra security is worth the extra cost.</p>
<p lang=""><span style="color: #ff0000;">屏蔽雙絞線電纜的構造與非屏蔽雙絞線非常相似</span>，但不同的是，成對的電線也被金屬屏蔽層（如金屬箔）圍繞。<span style="color: #ff0000;">外部的金屬箔屏蔽層可最大程度地減少電纜所遭受的電磁干擾</span>。這增加了電纜的安全性和可靠性。但是，不幸的是，<span style="color: #ff0000;">這也增加了電纜的成本，因此通常僅在高生產環境中使用</span>，在這種情況下，額外的安全性值得額外的成本。</p>
<p id="N1069F" lang="">The more common type of cabling is unshielded twisted pair cable. Instead of using extra shielding, this cable relies on the twisting of its copper pairs to minimize the effects of EMI. Each twisted pair is twisted to insulate itself from the other pairs, and because there is no additional shielding, it is available at a lower cost than STP. Therefore, UTP is the most common media of choice for small office, home office, residential, and many commercial networks.</p>
<p lang=""><span style="color: #ff0000;">電纜中最常見的類型是非屏蔽雙絞線電纜</span>。該電纜不使用額外的屏蔽，而是<span style="color: #ff0000;">依靠其銅線對的絞合來最大程度地減小電磁干擾的影響</span>。每個雙絞線都經過絞合，以使其自身與其他雙絞線絕緣，並且由於沒有額外的屏蔽，因此<span style="color: #ff0000;">可以以比屏蔽雙絞線電纜更低的成本獲得</span>。因此，非<span>屏蔽雙絞線電纜</span>是小型辦公室，家庭辦公室，住宅和許多商業網絡中最常見的選擇媒介。</p>
<p lang=""><span style="color: #ff99cc;">Unsheathed twisted pair cable(非屏蔽雙絞電纜)</span></p>
<p lang=""><span style="color: #ff99cc;"><img alt="" height="570" src="/images/3.png" width="418"/></span></p>
<p></p>
<p><span style="color: #ff99cc;"><strong><span title="Quick scroll up">Categorizing Twisted Pair Cable(</span>分類雙絞線電纜)</strong></span></p>
<p>Twisted pair cable is categorized based on a category (cat) number. For example, cat 3, or category 3, is the oldest type of cable that we use. It was introduced back in the 1980s and 1990s for use in the first star topologies. The maximum throughput or bandwidth of cat 3 cabling is only 10 Mbps (megabits per second). The cat 3, like all twisted pair cabling, cannot go farther than 100 meters without using a repeater, switch, or active hub to amplify the signal. This limited distance is attributable to the copper wiring in these cables. As the signal travels over the copper wire, the natural resistance to the wire decreases the signal’s strength, and it eventually becomes too weak for the distant end to receive. For this reason, there is a 100 meter limitation when building and designing a twisted pair network.</p>
<p>雙絞線電纜根據類別編號進行分類。例如,<span>3<span style="color: #ff0000;">類電纜</span></span><span style="color: #ff0000;">（或類別3）是我們使用的最古老的電纜類型</span>。它是在1980年代和1990年代引入的，用於第一批<span>星型網。<span style="color: #ff0000;">3類</span></span><span style="color: #ff0000;">電纜的最大傳輸量或帶寬僅為10 Mbps（兆位/秒）</span>。與所有雙絞線電纜一樣，如果不使用中繼器，交換機或有源集線器來放大信號，則<span>3類電纜</span>不能走超過100米。這種有限的距離歸因於這些電纜中的銅線。當信號在銅線上傳輸時，導線的電阻會降低信號的強度，最終變得太弱，無法接收到遠端。因此，在構建和設計<span style="color: #ff0000;">雙絞線網絡時存在100米的長度限制</span>。</p>
<p><span style="color: #ff99cc;">Cat 5(5類雙膠線電纜)</span></p>
<p><span>Cat 5 cables were an improvement on the older cat 3 cables and contain more twists, giving them more shielding from EMI and a maximum bandwidth of 100 Mbps. Cat 5e, or cat 5 enhanced, increased the speed of the maximum throughput to one Gbps, or 1000 Mbps, and became a gap filler until cat 6 cabling became commonplace.</span></p>
<p><span style="color: #ff0000;">5類雙膠線電纜是對較舊的<span>3</span><span style="color: #ff0000;">類</span></span><span style="color: #ff0000;">電纜的改進</span>，並包含更多的絞合線，從而使它們具有更大的<span>電磁干擾</span>屏蔽能力，最大帶寬為100 Mbps。 Cat 5e或5<span>類雙絞線電纜</span>增強後，將最大吞吐量的速度提高到1 Gbps或1000 Mbps，並成為了過度品，直到<span>6類雙絞線</span>電纜變得司空見慣。</p>
<p><span>Cat 6a overcomes the 37-55 meter limitation of cat 6 when used in 10GBaseT. Cat 7, the newest standard, is shielded and provides connections up to 10 Gbps with a maximum distance of 100 meters. “Cat 7 and cat 7a cabling will be used for backbone connections between servers within a data center” and “provide an alternative to using fiber-optic cabling within the data center”</span></p>
<p>當在10Gb乙太網路中使用時，<span>超六類雙膠線電纜</span>克服了6<span>類雙膠線電纜</span>的37-55米的限制。<span style="color: #ff0000;">最新標準7類雙膠線電纜被屏蔽，並提供高達10 Gbps的連接，最大距離為100米</span>。<span>7類</span><span>雙膠線電纜</span>和<span>超7類</span><span>雙膠線</span>電纜將用於數據中心內服務器之間的骨干連接，並提供在數據中心內使用光纖電纜的替代方案。</p>
<p>All cable categories up to cat 5e and cat 6a have a maximum distance of 100 meters. When used in 10GBaseT, the maximum distance for cat 6 is 55 meters. Cat 7 is shielded and exceeds the 100 meter limit. As the category of the cable increases, so do the number of twists per inch and the frequency range, allowing for more data and improved protection against EMI. Best practice for copper cabling is not to run cable lengths to the maximum because attenuation will reduce data capacity.</p>
<p></p>
<p>直至Cat 5e和Cat 6a為止的所有電纜類別的最大距離為100米。在10GBaseT中使用時，<span>Cat 6</span>的最大距離為55米。 Cat 7被屏蔽並超過100米的限制。隨著電纜類別的增加，每英寸的捻數和頻率範圍也會增加，從而可以提供更多的數據並改善對電磁脈衝的保護。銅纜佈線的最佳實踐是不要使電纜長度變大，因為會衰減降低數據的容量。</p>
<p></p>
<p></p>
<p><span style="color: #ff99cc;"><span title="Quick scroll up">Twisted Pair Connectors(</span>雙絞線連接器)</span></p>
<p>Twisted pair cables come with three main types of connectors. The first is the RJ-45 connector, which is an eight-pin connector used in Ethernet networks. Even though most Ethernet networks use only four pins, the RJ-45 provides eight pins for future use and capabilities. The first four pins are used to transmit (two pins) and receive (two pins).</p>
<p>雙絞線電纜帶有三種主要類型的連接器。第一個是RJ-45連接器，它是以太網網絡中使用的八針連接器。即使大多數以太網僅使用四個引腳，RJ-45仍提供八個引腳以供將來使用。前四個引腳用於發送（兩個引腳）和接收（兩個引腳）。</p>
<p><span>The RJ-11 connector is used in the standard telephone system. The RJ-11 is a six-pin connector, but commonly only two pins are used for a telephone (transmit and receive). If you have a two-line phone, then four pins are used: two pins to transmit and two pins to receive.</span></p>
<p></p>
<p class="tw-ta-container hide-focus-ring tw-nfl">RJ-11連接器用於標準電話系統。 RJ-11是一個六針連接器，但電話通常僅使用兩個針腳（用於發送和接收）。如果您有兩線電話，則會使用四個引腳：兩個引腳用於發送，兩個引腳用於接收。</p>
<p></p>
<p lang="">Finally, the DB-9 connector is used for RS-232 signals. This connector looks like a standard serial connector. It is used commonly for asynchronous serial communications, like connecting to an external modem. In modern networks, you will see this type of connector on a “rollover cable.” A rollover cable has a DB-9 on one side (which is connected to your laptop’s serial port), and an RJ-45 connector on the other side (which is used to connect to Cisco routers and switches to do administration tasks).</p>
<p lang="">最後，DB-9連接器用於RS-232信號。該連接器看起來像標準的串行連接器。它通常用於異步串行通信，例如連接到外部調製解調器。在現代網絡中，您將在“翻轉電纜”上看到這種類型的連接器。翻轉電纜的一側為DB-9（連接到筆記本電腦的串行端口），另一側為RJ-45連接器（用於連接到Cisco路由器和交換機以執行管理任務）。</p>
<p id="N1073E" lang="">A straight-through cable is a type of twisted pair cable that is used in local area networks to connect a computer to a network hub, such as a router. This type of cable is also sometimes called a patch cable. Both ends of the cable have an identical pinout, hence the name “straight-through.” A crossover cable switches the pinouts of the two ends of the cable, making the transmit and receive pins alternate on the two ends. This allows two workstations to connect directly to each other without the need for a hub, switch, or router.</p>
<p lang="">直通電纜是雙絞線電纜的一種，在局域網中用於將計算機連接到網絡集線器（例如路由器）。這種類型的電纜有時也稱為跳線。電纜的兩端都具有相同的引出線，因此被稱為“直通”。交叉電纜切換電纜兩端的引腳分配，使發送和接收引腳在兩端交替。這允許兩個工作站直接相互連接，而無需集線器 、交換機或路由器。</p>
<p lang=""></p>
<h3>PCH 11 Coaxial-Cable(同軸電纜)</h3>
<p style="text-align: left;"><span style="color: #ff99cc;"><strong>learning objectives/學習目標</strong></span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">Identify types of network cables and connectors.</pre>
<p>識別網絡電纜和連接器的類型。</p>
<p lang="" style="text-align: left;">Coaxial cable is a much older media technology. Coaxial cable, also known as coax for short, is composed of two conductors. The inner conductor, which is known as the insulated conductor (center wire), is the copper wire over which data is passed. The outer conductor is the braided metal shield and aids in protecting the inner wire from physical injury and the effects of EMI. Much like the shielding we saw in shielded twisted pair, the outer shield helps keep electromagnetic interference out of the data’s path. Between the inner conductor and the outer shield, we find an insulated core that prevents any data transfer between the inner core and outer shield. The outside of the cable is made of a flexible plastic jacket, much like the twisted pair cabling. Coaxial cabling was included in the first Ethernet standard as 10Base5 (thicknet) and continued to be used throughout updates as 10Base2 (thinnet) as well as being most commonly used in bus and ring networks. UTP cabling however, is easier to work with in a star topology and is significantly less expensive.</p>
<p lang="" style="text-align: left;"><span style="color: #ff0000;">同軸電纜是一種較老的媒體技術。</span>同軸電纜（也簡稱為同軸電纜）由兩個導體組成。內部導體（稱為絕緣導體（中心線）)是其上傳數據的銅線。外導體是編織的金屬屏蔽層，有助於保護內線免受傷害和電磁干擾的影響。就像我們在屏蔽雙絞線中看到的屏蔽層一樣，外部屏蔽有助於將電磁干擾排除在數據路徑之外。在內部導體和外部屏蔽層之間，我們找到了一個絕緣芯，可防止在內芯和外部屏蔽層之間進行任何數據傳輸。電纜的外部由柔軟的塑膠護套製成，非常類似於雙絞線電纜。同軸電纜已包含在第一個以太網標準中，稱為10Base5（Thicknet），並在整個更新中繼續用作10Base2（Thinnet），並且<span style="color: #ff0000;">在總線和環形網絡中最常用</span>。但是，<span style="color: #ff0000;">非屏蔽雙絞線電纜更容易在星形網中使用，且價格便宜得多。</span></p>
<p lang="" style="text-align: left;"><span style="color: #ff99cc;">2.Coaxial Cable Types(同軸電纜之類型)</span></p>
<p lang="" style="text-align: left;"><span lang="zh-TW"><span>There are three dominant coaxial cable types. The RG-6 is commonly used by cable TV companies to connect individual homes to the TV network. These cables are thick and usually used for outside connections to withstand the effects of the weather. The RG-58 is a type of coaxial cable that was heavily used in early 10Base2 (thinnet) networks, such as bus and ring topologies. Finally, the RG-59 is the traditional coaxial cable used to carry composite video between two nearby devices, such as your TV and the cable box. If you are a cable Internet user, this is also used to carry the WAN connection from your wall jack to your cable modem.</span></span></p>
<p lang="" style="text-align: left;">共有三種主要的同軸電纜類型。有線電視公司通常使用<span style="color: #ff0000;">RG-6</span>將單個房屋連接到電視網絡。這些電纜很粗，<span style="color: #ff0000;">通常用於外部連接並可以承受天氣的影響</span>。 <span style="color: #ff0000;">RG-58</span>是一種同軸電纜，<span style="color: #ff0000;">在諸如總線和環形拓撲</span>之類的早期10Base2（瘦網）<span style="color: #ff0000;">網絡中大量使用</span>。最後，<span style="color: #ff0000;">RG-59</span>是傳統的同軸電纜，<span style="color: #ff0000;">用於在兩個附近的設備（例如電視和電纜盒）之間傳送複合影片。</span>如果您是有線網路用戶，這也可用於將<span>廣域網路</span>連接從牆壁插孔連接到電纜調製解調器。</p>
<p lang="" style="text-align: left;"><span style="color: #ff99cc;">3.Coaxial Cable Connectors(<span lang="zh-TW">同軸電纜連接器</span>)</span></p>
<p id="N106B5" lang="">While there were three types of cables, there are only two types of common connectors used with coaxial cable. The first is called BNC, from the name Bayonet Neill-Concelman. Sometimes people also call this the British Naval connector, because the BNC was heavily used by the British in their shipboard radio systems. This connector was commonly used in early Ethernet networks and it has a “push and twist” type of connector to secure the cable to the network device.</p>
<p lang="">雖然有三種類型的電纜，但同軸電纜僅使用兩種類型的普通連接器。第一個稱為BNC，名稱為刺刀Neill-Concelman。有時人們也將其稱為英國海軍連接器，因為英國人在其艦載無線電系統中大量使用了BNC。該連接器通常用於早期的以太網網絡，並且具有“推壓式”連接器，用於將電纜固定至網絡設備。</p>
<p lang=""><span style="color: #ff99cc;">Coaxial jack.(<span lang="zh-TW">同軸插孔</span>)</span></p>
<p lang=""><img alt="" height="310" src="/images/image10.png" width="273"/></p>
<p lang=""></p>
<h3>PCH 11 Copper vs Fiber(銅vs光纖)</h3>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p>Categorize characteristics of connectors and cabling.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">分類連接器和電纜的特性。</span></pre>
<p lang="">When we compare the advantages and disadvantages of fiber-optic cables and copper (twisted pair) cables, we have to consider that fiber-optic has a higher bandwidth (measured in Gbps or Tbps), it can carry its signal many miles without the need of a repeater, it is immune to the effects of EMI, and it has much better security than traditional twisted pair cables. However, twisted pair cabling does hold some advantages of its own. For one, it is much less expensive than fiber-optic cabling. Also, copper wiring is much easier to install, taking only a few hours to learn. Finally, twisted pair cabling can be created and terminated using inexpensive tools. For example, a complete copper wiring toolset can be bought online for less than $50, while a complete fiber-optic kit may cost $1000 or more. For these reasons, copper has remained the dominant media in most local area networks.</p>
<p lang="">當我們比較光纖電纜和銅纜（雙絞線）的優缺點時，我們必須考慮到<span style="color: #ff0000;">光纖具有更高的帶寬</span>（以Gbps或Tbps為單位），它<span style="color: #ff0000;">可以將信號傳輸很多英里而無需作為中繼器</span>，它<span style="color: #ff0000;">不受電磁干擾</span>的影響，並且<span style="color: #ff0000;">比傳統的雙絞線電纜具有更好的安全性</span>。但是，<span style="color: #ff0000;">雙絞線電纜確實具有一些優點</span>。首先，它<span style="color: #ff0000;">比光纖電纜便宜得多</span>。而且，<span style="color: #ff0000;">銅線的安裝更容易</span>，只需幾個小時即可完成。最後，可以使用廉價的工具創建和終止雙絞線電纜。例如，一套完整的銅線工具套件可以在線購買，價格不到50美元，而一套完整的光纖套件的價格可能在1000美元以上。由於這些原因，<span style="color: #ff0000;">銅一直是大多數局域網中的主要介質</span>。</p>
<h2>PCH 11 Converters(轉換器)</h2>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p><span style="color: #000000;">Categorize characteristics of connectors and cabling.</span></p>
<p><span lang="zh-TW">分類連接器和電纜的特性。<br/></span></p>
<p>Because of the wide variety of cable and connector types, there is sometimes a need to convert from one type of media to another. For example, if you have to make a connection between two LANs in buildings that are located one mile apart, but your network uses Cat 5e, UTP cabling, how can you make that connection? When you look at your routers, you find they only accept RJ-45 connections, but you know that you cannot run a Cat 5e cable more than 100 meters. How can you solve this problem? With a media converter.</p>
<p>由於電纜和連接器的類型多種多樣，有時需要從一種介質轉換為另一種介質。例如，如果你必須在相距一英里的建築物中的兩個LAN之間建立連接，但是你的網絡使用Cat 5e，<span>非屏蔽雙絞線</span>電纜，那麼如何建立連接？當您查看路由器時，會發現它們僅接受RJ-45連接，但你知道不能將Cat 5e電纜的長度超過100米。你如何解決這個問題？帶媒體轉換器。</p>
<p></p>
<p id="N1067B" lang="">Using a media converter, you can convert your RJ-45 connection into an ST, SC, or LC fiber connection, as shown in the image below. Then, you run the one-mile fiber cable to the other building, and use a media converter to convert from the ST, SC, or LC fiber connection back to the RJ-45 the other router requires. Because this is a simple, “dumb” device, it simply converts whatever is received on the first media type and repeats it back out the second media type. Common types of media converters are from Ethernet (copper) to fiber-optic (and back) or coaxial to fiber-optic (and back).</p>
<p lang="">使用媒體轉換器，您可以將RJ-45連接轉換為ST，SC或LC光纖連接，如下圖所示。然後，將一英里的光纜連接到另一座建築物，並使用媒體轉換器將ST，SC或LC光纖連接轉換回另一台路由器所需的RJ-45。因為這是一個簡單的“啞”設備，所以它僅轉換在第一媒體類型上接收到的所有內容，然後將其重複播放回第二媒體類型。媒體轉換器的常見類型是從以太網（銅）到光纖（然後向後）或從同軸電纜到光纖（然後向後）。</p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW"><br/><span style="color: #ff99cc;">媒體轉換器</span></span></pre>
</div>
</div>
<p lang=""><img alt="" height="409" src="/images/image11.png" width="426"/></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><span>Media converters. Photo used under CC-BY-NC license from </span><a href="https://flic.kr/p/39UoP8" id="_i_1" lang="" target="_blank">Adrian Black<br/></a></span></p>
<h2>PCH 12 Ethernet Standards(以太網標準)</h2>
<p><span style="color: #ff99cc;"><span title="Quick scroll up">Overview/</span>總覽</span></p>
<p><span title="Quick scroll up"><span>In this module, we are going to discuss how the various Ethernet standards developed over time. We will also discuss why there is a need for these standards and the effect of these standards on the industry. In addition, we are going to cover various types of network media standards. We will cover 10Base-T (802.3i, 1990) as well as 100Base-T and 1000Base-T (1GBASE-T or 1 GigE) Ethernet standards, which are most commonly found in current office networks. We will discover how to plan a basic network connection using 100BaseT. Finally, we will cover differences between Ethernet and TCP/IP.</span></span></p>
<p>在本模塊中，我們將討論隨著時間的推移如何開發各種以太網標準。我們還將討論為什麼需要這些標準以及這些標準對行業的影響。另外，我們將涵蓋各種類型的網絡媒體標準。我們將介紹10Base-T以100Base-T和1000Base-T（1GBASE-T或1 GigE）以太網標準，它們是當前辦公網絡中最常見的標準。我們將認識如何使用100BaseT規劃基本的網絡連接。最後，我們將介紹以太網和TCP / IP之間的差異。</p>
<h3>PCH 12 Ethernet Technology(以太網技術)</h3>
<p lang=""><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">Recognize the typical network standards.<br/><br/>識別典型的網絡標準。</span></pre>
<p></p>
<p>Before Ethernet was the dominant technology, there were multiple types of networking technologies competing for market share. At one point, Ethernet was just one of many competing standards, including token ring, fiber distributed data interface (FDDI), and more. By the late 1990s, a single standard was clearly the dominant choice in both office and residential networks: IEEE 802.3 Ethernet. Ethernet uses various media types, from coaxial cable to twisted-pair copper and fiber-optic cables (discussed in an earlier module). The 802.3 Ethernet standard and the concept of using frames for communication over various media, including Wireless 802.11, is predominant today, and it is vital to understand the fundamentals of Ethernet including the various speed and distance limitations each standard places on our networks.</p>
<p lang="">在<span style="color: #ff0000;">以太網成為主導技術之前，存在多種類型的網絡技術爭奪市場份額</span>。一方面，以太網只是眾多競爭標準之一，包括令牌環，光纖分佈式數據接口（FDDI）等。到<span style="color: #ff0000;">1990年代後期，單一標準顯然已成為辦公室和住宅網絡中的主要選擇</span>：IEEE 802.3以太網。<span style="color: #ff0000;">以太網使用各種介質類型，從同軸電纜到雙絞銅纜和光纖電纜</span>（在較早的模塊中討論）。 802.3以太網標準和使用幀在包括無線802.11在內的各種媒體上進行通信的概念如今非常盛行，了解以太網的基本知識（包括每個標準對我們網絡的各種速度和距離限制）至關重要。</p>
<p lang="">The original 802.3 Ethernet standard sent data over coaxial cables at a half-duplex transmission rate which means devices can only transmit (TX) or Receive (RX) alternately at separate intervals because the data used the same path for both. This is analagous to communicating using a walkie-talkie rather than a telephone.</p>
<p lang=""><span style="color: #ff0000;">最初的802.3以太網標準以半雙工傳輸速率通過同軸電纜發送數據</span>，這<span style="color: #ff0000;">意味著設備只能以單獨的間隔交替（TX）或接收（RX）</span>，因為這兩個數據使用相同的路徑。這類似於使用對講機而不是電話進行通話。</p>
<p lang="">This coaxial cable design became known as Thicknet and later Thinnet due to the size of the cables and was mostly used in bus and ring network topologies.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">由於電纜的尺寸，這種同軸電纜設計被稱為Thinnet，後來被稱為Thinnet，並且主要用於總線和環形網絡拓撲中。<br/><br/></span></pre>
<p id="N10699" lang="">Thicknet, the original IEEE 802.3 standard designated as 10Base5, provided a maximum bandwidth of 10Mbps and was limited in distance to 500 meters. Thinnet, or IEEE 10Base2, used a smaller type of coaxial and also provided a maximum bandwidth of 10 Mbps, but was limited to 185 meters. Eventually the industry transitioned from coaxial cabling to unshielded twisted-pair cabling.</p>
<p lang="">最初被指定為10Base5的IEEE 802.3標準Thicknet提供的最大帶寬為10Mbps，並且距離限制為500米。 Thinnet或IEEE 10Base2使用較小類型的同軸電纜，並且提供的最大帶寬為10 Mbps，但限制為185米。最終，該產業從同軸電纜過渡到非屏蔽雙絞線電纜。</p>
<p lang="">Twisted pair cabling, dubbed 10BaseT, provided the same 10 Mbps half-duplex maximum bandwidth with a category 3 cable, but the distance was limited to 100 meters due to the lack of the extra shield that coaxial provided. In spite of the increased attenuation (loss of signal strength over distance), network designers moved to twisted pair cabling because of ease of installation and overall lower cost. Coaxial cable fell out of favor and the 802.3 Ethernet standard continues to evolve with faster data rates over twisted pair cabling categories.</p>
<p lang="">雙絞線電纜（稱為10BaseT）與第3類電纜可提供相同的10 Mbps半雙工最大帶寬，但由於缺少同軸電纜提供的額外屏蔽，因此距離限制為100米。儘管衰減增加了（信號強度隨距離損失），但由於易於安裝和總體成本較低，網絡設計人員仍選擇雙絞線佈線。同軸電纜不受歡迎，並且802.3以太網標準繼續發展，而雙絞線電纜類別的數據速率更快。</p>
<p id="N1069F" lang="">The design question that Ethernet had to answer was how a device should access the network. The nature of half-duplex transmission (TX or RX) over a single wire pair meant that collisions were imminent. Should the access be deterministic and orderly, or contention-based and chaotic? The older ring-based networks, such as token ring, were developed upon the premise that order was necessary: each machine would wait for its turn to transmit its data until it received the electronic token that was passed around the ring. This is similar to the “talking stick” or “speaker’s staff” used by Native Americans and other aboriginal tribes where the staff (token) gave the person access to speak and the remaining group members listened. Ethernet, on the other hand, is premised upon a contention-based model. This is more chaotic and allows any device on the network to transmit anytime it wishes. The problem with this type of philosophy is figuring out how to prevent two devices from transmitting at the same time and causing a collision of the data. With Ethernet, the answer came in the form of a media access control method called carrier sense multiple access/collision detect (CSMA/CD).</p>
<p lang="">以太網必須回答的設計問題是設備如何訪問網絡。單線對上半雙工傳輸（TX或RX）的性質意味著即將發生衝突。訪問應該是確定性和有序的，還是基於競爭且混亂的？較早的基於環的網絡（例如令牌環）是在必須有順序的前提下開發的;每台機器都將等待其輪流發送其數據，直到接收到圍繞環傳遞的電子令牌為止。這類似於美洲原住民和其他原住民部落使用的“說話棒”或“發言人的工作人員”，其中工作人員（令牌）使該人員可以發言，其餘的小組成員則可以收聽。另一方面，以太網以基於競爭的模型為前提。這更加混亂，並允許網絡上的任何設備在其希望的任何時間進行傳輸。這種類型原理存在的問題是，要弄清楚如何防止兩個設備同時傳輸並導致數據衝突。對於以太網，答案是以一種稱為載波偵聽多路訪問/衝突檢測（CSMA / CD）的媒體訪問控制方法。</p>
<p><br/><br/><br/></p>
<h3>PCH 12 Carrier Sense Multiple Access and Collision Detect</h3>
<p><span style="color: #ff0000;"><strong>(<span lang="zh-TW">載波偵聽多路訪問與衝突檢測</span>)</strong></span></p>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p>Recognize the typical network standards.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">識別典型的網絡標準。</span></pre>
<p lang=""></p>
<p lang="">The nature of half-duplex transmission brought about the need for CSMA/CD, which works by allowing all devices to transmit data whenever they wish. The carrier sense portion means that the device “listens” to the network first to find a “break” in the conversation. If the device doesn’t hear other devices transmitting, then it begins its transmission. Multiple access refers to every device having equal access to the network at all times. This is unlike the token ring network in which each device had to wait for the signal (token) before transmitting. Finally, we have collision detection as part of the CSMA/CD control method. If, by chance, two devices both were ready to transmit, they “listened” to the network for a “lull” in the conversation, and both started transmitting at the same time, the devices are able to detect that they both transmitted at the same time and caused a collision.</p>
<p lang="">半雙工傳輸的性質帶來了對<span style="color: #ff0000;"><strong>CSMA / CD(載波偵測多重存取/碰撞偵測)</strong></span>的需求，它允許所有設備在需要時傳輸數據。運營商感知部分意味著設備首先“監聽”網絡，以在會話中找到“間隔”。如果該設備聽不到其他設備的傳輸，則開始傳輸。多路訪問是指每台設備始終具有對網絡的平等訪問權限。這與令牌環網絡不同，在令牌環網絡中，每個設備都必須在發送之前等待信號（令牌）。最後，我們將碰撞檢測作為<span style="color: #ff0000;"><strong>CSMA / CD(載波偵測多重存取/碰撞偵測)</strong></span>控制方法的一部分。如果偶然地兩個設備都準備好發送，則它們在通話中“監聽”網絡中的“間隔”，並且兩個設備都同時開始發送，則這些設備能夠檢測到它們都在發送時發送。同時又造成了衝突。</p>
<p id="N1069B" lang="">The image below depicts both the CSMA/CD and CSMA/CA simplified algorithm. The left branch is CSMA/CD used by half-duplex Ethernet and the right branch is CSMA/CA used by 802.11 wireless LAN, which is also half-duplex.</p>
<p lang="">下圖描述了CSMA / CD(載波偵測多重存取/碰撞偵測)和<strong>CSMA/CA(載波偵測多重存取/碰撞避免）</strong>簡化算法。<span style="color: #ff0000;">左分支是半雙工以太網使用的CSMA / CD<strong>(載波偵測多重存取/碰撞偵測)</strong></span>，<span style="color: #ff0000;">右分支是802.11無線LAN（也是半雙工）使用的CSMA / CA<strong>(載波偵測多重存取/碰撞避免）</strong></span>。</p>
<p><img alt="" height="406" src="/images/image1 (1).png" width="417"/></p>
<p><span>CSMA/CD and CSMA/CA diagram. By </span>Tkz4<span><span> </span>(Own work) [</span>CC BY-SA 3.0<span><span> </span>or<span> </span></span>GFDL<span>], via Wikimedia Commons</span></p>
<p></p>
<p lang=""></p>
<p lang=""></p>
<p lang="">In the example shown below, four devices are connected in a physical bus topology. Each device has equal access to the network. Here, all the devices are listening, trying to determine if any other device is communicating before beginning transmission.</p>
<p>在下面顯示的示例中，四個設備以物理總線拓撲連接。每個設備對網絡都有平等的訪問權限。在這裡，所有設備都在監聽，試圖確定是否有其他設備在開始傳輸之前進行通信。</p>
<p></p>
<p><img alt="" height="352" src="/images/image2.png" width="505"/></p>
<p id="N106C1" lang="">Ethernet devices on a shared bus topology. Image used under CC-BY-SA license from<span> </span>Nattydusadee.</p>
<p></p>
<p lang=""></p>
<p id="N106CA" lang="">In the next image below, we see an example of two devices that transmitted at the same time. This simultaneous transmission resulted in a data collision, causing the transmission to be broken.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">在下一張圖片中，我們看到了兩個同時傳輸的設備的示例。這種同時傳輸導致數據衝突，會導致傳輸中斷。<br/><br/><br/><img alt="" height="365" src="/images/image3.png" width="524"/><br/></span></pre>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<p id="N106D2" lang="">Collision on an Ethernet segment. Image used under CC-BY-SA license from<span> </span>Nattydusadee.</p>
<p id="N106D2" lang=""></p>
<p lang=""></p>
</div>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"> </span></pre>
<p id="N106DB" lang="">When a collision is detected, both devices choose a backoff time at random, and then attempt to retransmit again. In the diagram below, the computers choose to wait 200 milliseconds and 300 milliseconds, respectively. When that time is up, they will attempt to sense if another machine is already transmitting. If there is nothing detected, the first machine will transmit its message. Once completed, the second machine will then transmit its message, after its 300 millisecond wait time.</p>
<p lang="">當檢測到衝突時，兩個設備都會隨機選擇一個退避時間，然後嘗試重新傳輸。在下圖中，計算機分別選擇等待200毫秒和300毫秒。時間到時，他們將嘗試檢測另一台機器是否已經在傳輸。如果未檢測到任何內容，則第一台機器將發送訊號。完成後，第二台機器將在等待300毫秒後發送其訊號。</p>
<p lang=""></p>
<p lang=""></p>
<p lang=""><img alt="" height="386" src="/images/image4.png" width="555"/></p>
<p id="N106E3" lang="">Recovering from a collision with random backup timers. Image used under CC-BY-SA license from<span> </span>Nattydusadee.</p>
<h3>PCH 12 Evolution of Standards(標準的演變)</h3>
<p><span style="color: #ff99cc;">learning objectives/學習目標</span><br/><br/><span>Recognize the typical network standards.</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">識別典型的網絡標準。<br/></span></pre>
<p id="N10690" lang="">Finally, we need to discuss the various standards we use in Ethernet in terms of bandwidth and distance limitations.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">最後，我們需要討論帶寬和距離限制方面在以太網中使用的各種標準。<br/><br/></span></pre>
<p id="N10693" lang="">The Ethernet standard also determines the type of cable, its bandwidth, and its distance limitation. It is important to know these standards, especially those that relate to a category 3, 5, 5e, and 6 cabling standard.</p>
<p lang="">以太網標準還確定電纜的類型，帶寬和距離限制。重要的是要知道這些標準，尤其是與3、5、5e和6類佈線標準有關的標準。</p>
<p lang="">When discussing data flow and speed, the two terms referred to are bandwidth and throughput. Often used interchangeably, the two terms are different and need to be understood. Simply put, bandwidth is the theoretical maximum of the given standard, whereas throughput is the actual potential in a real-world scenario. Many factors affect actual throughput, such as half-duplex vs. full-duplex, cable length, and quality. Both bandwidth and throughput are measured in bits per second (bps) with the prefix K (kilobit), M (megabit), or G (gigabit). Each Ethernet category (cat) cable supports a different Ethernet standard and thereby determines the bandwidth capacity or maximum throughput. The table below shows the bandwidth according to Ethernet type.</p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<p lang=""><span style="color: #ff0000;">在討論數據流和速度時，所指的兩個術語是帶寬和吞吐量</span>。<span style="color: #ff0000;">這兩個術語通常可以互換使用</span>，它們是不同的，這是需要去理解的。簡而言之，<span style="color: #ff0000;">帶寬是給定標準的理論最大值，而吞吐量是實際情況下的實際數值</span>。<span style="color: #ff0000;">許多因素會影響實際吞吐量，例如半雙工與全雙工，電纜長度和質量。</span>帶寬和吞吐量均以每秒比特數（bps）以及前綴K（千bit），M（兆bit）或G（千兆bit）來衡量。每條以太網類別電纜均支持不同的以太網標準，從而確定帶寬容量或最大吞吐量。下表顯示了根據以太網類型的帶寬。</p>
<p lang=""></p>
</div>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">PCH 12 Planning a Basic Network Connection Using 100 or 1000BaseT</div>
<p class="tw-ta-container hide-focus-ring tw-nfl"><span style="color: #ff0000;"><strong>(<span lang="zh-TW">使用100 / 1000BaseT規劃基本網絡連接)</span></strong></span></p>
<p class="tw-ta-container hide-focus-ring tw-nfl"><span style="color: #ff99cc;">learning objectives/學習目標</span></p>
<p class="tw-ta-container hide-focus-ring tw-nfl">Plan a basic network connection using 100BaseT.</p>
<div class="tw-ta-container hide-focus-ring tw-nfl">
<div class="contentContain">
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">使用100BaseT規劃基本的網絡連接。<br/></span></pre>
<p lang=""></p>
<p id="N10688" lang="">Now that you have a general understanding of networking hardware, application of standards for LANs (local area networks) and WANs (wide area networks), and the limitations of the media used, you should be able to plan adding a network node to an already existing network. For example, you could add a new computer to your company’s wired LAN. In such situations, the majority of the hardware installation is plug and play (PnP), but you still have to know that the hardware and media chosen are correct, configure software settings for network access, and verify the new hardware will function properly to allow user access to all network resources.</p>
<p lang="">既然您已經對網絡硬件，LAN（局域網）和WAN（廣域網）的標準的應用以及所用媒體的限制有了一般的了解，那麼你應該能夠計劃將網絡節點添加到已經現有網絡。例如，你可以將新計算機添加到公司的有線局域網中。在這種情況下，大多數硬件安裝都是即插即用（PnP），但你仍然必須知道所選的硬件和媒體是正確的，配置用於網絡訪問的軟件設置，並驗證新硬件是否正常運行以允許用戶訪問所有網絡資源。</p>
<p lang="">Current technology in most small office/home office (SOHO) environments will have auto-sensing networking hardware. There are older switches and routers that still remain in some networks that do not have the ability to run at 100/1000BaseT, so check your network documentation!</p>
<p lang="">大多數小型辦公室/家庭辦公室（SOHO）環境中的當前技術都將具有自動感應網絡硬件。在某些網絡中仍然存在一些較舊的交換機和路由器，這些交換機和路由器仍無法在100 / 1000BaseT上運行，因此請查看你的網絡文檔！</p>
<p lang=""><strong><span style="color: #ff99cc;" title="Quick scroll up">Media/媒體</span></strong></p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<div class="section" id="N1068E">
<div class="sectionContain">
<p id="N10695" lang="">Installing a wired connection onto the network means knowing if the NIC (network interface card) of the device can also auto-negotiate throughput based on the cable media used. Again, new or current technology should be auto-sensing and auto-negotiating (speed, duplex mode and other network parameters). The most important decision for the technician is selecting the correct type of Ethernet cable to connect the device. Recall that the cable standards will restrict distance as well as throughput. A cat 5 cable was standard for 100BaseT but will limit throughput to 100 Mbps so you must use cat 5e or cat 6 if you are trying to achieve 1000BaseT (1 Gbps).</p>
<p lang="">在網絡上安裝有線連接意味著要知道設備的NIC（網絡接口卡）是否還可以根據所使用的電纜介質自動協商吞吐量。同樣，新技術或當前技術應該是自動感應和自動協商（速度，雙工模式和其他網絡參數）。對於技術人員而言，最重要的決定是選擇正確的以太網電纜類型來連接設備。回想一下，電纜標準將限制距離以及吞吐量。<span style="color: #ff0000;"> Cat 5電纜是100BaseT的標準配置，但會將吞吐量限制為100 Mbps，因此，如果要實現1000BaseT（1 Gbps），則必須使用Cat 5e或Cat 6。</span></p>
</div>
</div>
<div class="section" id="N1069A">
<div class="sectionContain">
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<p><strong><span style="color: #ff99cc;" title="Quick scroll up">Distance/距離</span></strong></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p id="N106A1" lang="">Most current SOHO environments will have Ethernet wall jacks internally connecting to the next network device, be it a switch or a hub. But, if there is not a connection already present, you must remember that all copper-based Ethernet cable is limited to 100 meters. Do not run the wire in an area where the cabling can cause a safety hazard, become damaged due to environmental conditions, or suffer from electromagnetic interference (EMI).</p>
<p lang="">當前大多數SOHO環境將在內部將以太網牆壁插孔連接到下一個網絡設備，無論是交換機還是集線器。但是，<span style="color: #ff0000;">如果尚不存在連接，則必須記住所有基於銅纜的以太網電纜限制為100米</span>。<span style="color: #ff0000;">請勿在可能會導致安全隱患、因環境條件而損壞電纜或遭受電磁干擾（EMI）的區域中佈線。</span></p>
<p lang=""><span style="color: #ff99cc;"><strong><span title="Quick scroll up">Verify Connectivity/</span>驗證連接性</strong></span></p>
<p id="N106AD" lang="">After the machine is connected and powered on (assuming Windows 7 or later), watch the system tray after boot-up to see if there is a wired network icon. The standard Windows 7 icons are:</p>
<p lang="">連接機器並打開電源後（假設使用Windows 7或更高版本），啟動後請查看系統托盤，以查看是否有有線網絡圖標。 Windows 7的標準圖標是：</p>
<div class="tw-ta-container hide-focus-ring tw-nfl">
<div class="contentContain">
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<div class="section" id="N1069A">
<div class="sectionContain">
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<div class="section" id="N106A6">
<div class="sectionContain">
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"><img alt="" height="140" src="/images/image7.png" width="531"/></div>
<div class="tw-ta-container hide-focus-ring tw-nfl">
<p id="N106B7" lang="">Wired network icons. Images used under CC-BY license from Russell Burchill.</p>
<p id="N106B7" lang=""></p>
<p lang=""></p>
<div class="section" id="N106A6">
<div class="sectionContain">
<p id="N106BB" lang="">Access the “network sharing center” to select the type of network access you need to have and add any devices required for the node (e.g., a printer). Verify access by opening the browser or using a command line tool to verify connectivity and addressing.</p>
<p lang="">訪問“<span style="color: #ff0000;">網絡共享中心</span>”以選擇所需的網絡訪問類型，並添加該節點所需的任何設備（例如打印機）。通過打開瀏覽器或使用命令行工具來驗證訪問權限，以驗證連接性和地址。</p>
<h2>PCH 12 Differentiating Between Ethernet and TCP or IP</h2>
<p style="text-align: left;"><span lang="zh-TW" style="color: #000000;"><strong><span style="color: #ff0000;">(在以太網和TCP/IP之間進行區分)<br/></span></strong><br/><span style="color: #ff99cc;">learning objectives/學習目標<br/></span></span><span lang="zh-TW"><br/>Differentiate between Ethernet and TCP/IP.</span><span lang="zh-TW"><br/></span></p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">區分以太網和TCP / IP。<br/><br/></span></pre>
<p lang="" style="text-align: left;">As an A+ certified technician, you will be introduced to the basics of computer networking, which is further covered when learning the CompTIA Net+ standards. Although CompTIA A+ does not test on the open systems interconnection model (OSI model), it is a theoretical model that is the basis for the way data travels through computer networks. When you click on an icon and connect to the Internet through a browser such as Google Chrome, Mozilla Firefox, or Internet Explorer, a request to connect is sent through a series of steps from the application layer down to the physical layer. All data physically enters and exits a computer node (client, server, or printer) through a network interface card (NIC) based on the type of medium being used (wireless, copper, or fiber-optic). The data packets are represented and interpreted using the binary number system.</p>
<p lang="" style="text-align: left;">作為A+認證的技術人員，將向你介紹計算機網絡的基礎知識，在學習CompTIA Net +標準時將進一步介紹這些知識。儘管CompTIA A +沒有在開放系統互連模型（OSI模型）上進行測試，但它是一種理論模型，是數據在計算機網絡中傳輸的基礎。當你單擊圖標並通過瀏覽器（例如Google Chrome，Mozilla Firefox或Internet Explorer）連接到Internet時，連接請求將通過從應用程序層到物理層的一系列步驟發送。根據使用的介質類型（無線，銅纜或光纖），所有數據都通過網絡接口卡（NIC）物理地進入和退出計算機節點（客戶端，服務器或打印機）。數據包將使用二進制數字系統表示和解釋。</p>
<p lang=""><img alt="" height="391" src="/images/image16.png" width="514"/></p>
<p lang="">Image used under CC-BY license from Russell Burchill.</p>
<p lang=""></p>
<p lang=""><span style="color: #ff99cc;"><strong>Protocols/<span>協議</span></strong></span></p>
<p lang="">In computer networking, a protocol is a set of communication rules by which data communication occurs. The popularity of Ethernet is based on the standardization of protocols and ability to use the TCP/IP suite to carry data throughout a variety of hardware devices.</p>
<div class="section" id="N10699">
<div class="sectionContain">
<p lang=""><span style="color: #ff0000;">在計算機網絡中，協議是通過其進行數據通信的一組通信規則。</span>以太網的普及是基於協議的標準化以及使用TCP / IP套件在各種硬件設備中傳輸數據的能力。</p>
<p lang=""><span style="color: #ff99cc;" title="Quick scroll up">Ethernet/乙太網路</span></p>
<div class="section" id="N106A5">
<div class="sectionContain">
<p lang="">Ethernet is defined by the IEEE 802.3 specification, which sets the standard and interoperability between devices, allowing communication over computer networks. These specifications control how data physically travels between nodes on both the physical layer and the data link layer through media access control (MAC). The hardware controlled by these specifications include NICs, wiring (i.e., cat 5, 5e, and 6) including the RJ-45 connectors, switches, and hubs.</p>
<p lang="">以太網由IEEE 802.3規範定義，該規範設置了設備之間的標準和互操作性，從而允許通過計算機網絡進行通信。這些規範通過媒體訪問控制（MAC）控制數據在物理層和數據鏈路層上的節點之間的物理傳輸方式。這些規範所控制的硬件包括NIC，包括RJ-45連接器，交換機和集線器在內的佈線（即Cat 5、5e和6）。</p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"><span style="color: #ff99cc;">TCP/IP(<span>傳輸控制協定/網際網路協定</span>)</span></div>
</div>
</div>
<p id="N106B8" lang="">Whereas Ethernet controls the physical data, transmission control protocol and Internet protocol (TCP/IP) is a suite of protocols that operate logically throughout the different layers of the <span style="color: #ff0000;">OSI</span> model as well as in the TCP/IP model.</p>
<p lang="">以太網控制物理數據，而傳輸控制協議和Internet協議（TCP / IP）是一套協議，可以在<span style="color: #ff0000;">開放式系統互聯模型</span>的不同層以及TCP / IP模型中進行邏輯操作。</p>
</div>
</div>
<div class="section" id="N106A5"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"><img alt="" height="571" src="/images/image17.png" width="508"/></div>
<div class="section" id="N106A5">
<p id="N106C4" lang="">A good analogy to help understand how Ethernet uses TCP/IP to transport data is to consider the old pneumatic tube systems used by banks. The tube and the carrier that the deposit envelope is placed in represent Ethernet. The envelope and the currency represent a protocol from the TCP/IP suite used throughout different layers (see additional information<span> </span><a href="http://superuser.com/questions/206431/ethernet-vs-tcp-vs-ip" id="_i_3" lang="" target="_blank">here</a>).</p>
<p lang="">這裡一個很好的<span>類推</span>可以幫助理解以太網如何使用TCP / IP傳輸數據，這裡使用銀行的舊式氣動系統。放置存款信封的管子和載體代表以太網。信封和貨幣表示不同層使用的來自TCP / IP套件的協議（請參見此處的其他信息）。</p>
<h1>HW2</h1>
<div actguid="d87f2f190a0001dc79087ffb3e23f9a4" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f190a0001dc79087ffb3e23f9a4&amp;userGUID=40923240%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch12_lbd07">
<div class="activityhead">
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">kaggle:<a href="https://www.kaggle.com/gg542466/cp2020-gb2-1/edit/run/48109774">https://www.kaggle.com/gg542466/cp2020-gb2-1/edit/run/48109774</a></div>
</div>
</div>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"><img alt="" height="335" src="/images/1.png" width="595"/></div>
</div>
<h2>2-1(亂數分組)</h2>
<p><span style="color: #ff6600; background-color: #000000;">Kaggle</span>:<a href="https://www.kaggle.com/gg542466/hw2-2-1">https://www.kaggle.com/gg542466/hw2-2-1</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request
target_url = "https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776"
cp1b = []
for line in urllib.request.urlopen(target_url):
    cp1b.append(int(line.decode('utf-8').rstrip()))
from random import shuffle
shuffle(cp1b)
step = 12
cp1bGroup = []
m = int(len(cp1b)/step)
for i in range(0,len(cp1b),step):
    cp1bGroup.append(cp1b[i:i+step])
print(cp1bGroup)</pre>
<p></p>
<p><span style="color: #ff6600;">解題步驟:</span></p>
<p><span style="color: #000000; background-color: #ffffff;">1.導入要使用的物件。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request</pre>
<p><span style="color: #000000; background-color: #ffffff;">2.設定目標網址。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">target_url = "https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776"
</pre>
<p><span style="color: #000000; background-color: #ffffff;">3.設定名為cp1b的數列。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">cp1b = []</pre>
<p><span style="color: #000000; background-color: #ffffff;">4.使用for-loop以line跟url為變數,並且讓cp1b新增編碼後的line,然後消除字尾的符號。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for line in urllib.request.urlopen(target_url):
     cp1b.append(int(line.decode('utf-8').rstrip()))</pre>
<p><span style="color: #000000; background-color: #ffffff;">5.shuffle沒有辦法直接使用,需導入random模塊加以使用。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from random import shuffle</pre>
<p><span style="color: #000000; background-color: #ffffff;">6.將cp1b裡的原素隨機排列。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">shuffle(cp1b)</pre>
<p><span style="color: #000000; background-color: #ffffff;">7.將每次分組的停止點設12人為上限。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">step = 12</pre>
<p><span style="color: #000000; background-color: #ffffff;">8.另設一個名為cp1bGroup的數列。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">cp1bGroup = []</pre>
<p>9.設m為變數,int功用為cp1b取整數,len為計算cp1b的人數,step為一組取12人。</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">m = int(len(cp1b)/step)</pre>
<p>10.再次<span>使用for-loop以i在範圍(以0開頭,len為計算cp1b的人數,在第12人結束),</span></p>
<p>讓<span>cp1bGroup新增</span><span>定義i的步長與停止點。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(0,len(cp1b),step):
    cp1bGroup.append(cp1b[i:i+step])</pre>
<p>11.打印出數列<span>cp1bGroup。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">print(cp1bGroup)</pre>
<p>成果:</p>
<p><img alt="" height="230" src="/images/未命名.png" width="1523"/></p><h2>2-2(加退選)</h2><h2>2-3</h2>
<h1>HW3</h1>
<h2>7.List Comprehensions(理解串列)</h2>
<p><strong>Exercise 7 (練習7)</strong></p>
<p>Let’s say I give you a list saved in a variable:<span> </span><code class="highlighter-rouge">a = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code>. Write one line of Python that takes this list<span> </span><code class="highlighter-rouge">a</code><span> </span>and makes a new list that has only the even elements of this list in it.</p>
<p><span style="color: #ff6600;">假設我提供給你了一個保存在變量中的列表：a = [1、4、9、16、25、36、49、64、81、100]。編寫一行Python程式，使用此列表a並創建一個僅包含該列表偶數元素的新列表。</span></p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"></div>
<p><strong>Discussion(討論)</strong></p>
<p>Concepts for this week:</p>
<p>本周將應用的概念:</p>
<ul>
<li><span style="color: #ff6600;">List comprehensions(理解串列)</span></li>
</ul>
<p><span style="color: #000000; background-color: #ff99cc;"><strong>List comprehensions(理解串列)</strong></span></p>
<p>The idea of a<span> </span><em>list comprehension</em><span> </span>is to make code more compact to accomplish tasks involving lists. Take for example this code:</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">理解串列的意思是使代碼更緊湊，以完成涉及列表的任務。以下面的代碼為例：<br/></span></pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">years_of_birth = [1990, 1991, 1990, 1990, 1992, 1991]
  ages = []
  for year in years_of_birth: 
    ages.append(2014 - year)
</pre>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW"><br/>And at the end, the variable ages has the list [24, 23, 24, 24, 22, 23]. What this code did was translate the years of birth into ages, and it took us a for loop and an append statement to a new list to do that.</span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">最後，變量年齡具有列表[24、23、24、24、22、23]。這段代碼所做的就是將出生的歲月轉換成年齡，然後我們使用了for循環，並在新列表中添加了一個append語句來完成此操作。</span></p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">比較這段代碼：<br/><br/></span></pre>
</div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">years_of_birth = [1990, 1991, 1990, 1990, 1992, 1991]
  ages = [2014 - year for year in years_of_birth]</pre>
<p></p>
<p class="tw-ta-container hide-focus-ring tw-nfl">The second line here - the line with ages is a list comprehension.</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">這裡的第二行,帶年齡的行列是理解串列。<br/></span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">It accomplishes the same thing as the first code sample - at the end, the ages variable has a list containing [24, 23, 24, 24, 22, 23], the ages corresponding to all the birthdates.</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">它完成了與第一個代碼示例相同的操作...最後，ages變量具有一個包含[24、23、24、24、22、23]的列表，這些年齡對應於所有的生日。</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span>The idea of the list comprehension is to condense the for loop and the list appending into one simple line. Notice that the for loop just shifted to the end of the list comprehension, and the part before the </span><code class="highlighter-rouge">for</code><span><span> </span>keyword is the thing to append to the end of the new list.</span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">列表理解的想法是壓縮for循環，並將列表追加到一條簡單的行中。注意，for循環剛剛移到列表理解的末尾，而for的關鍵字之前的部分是要附加到新列表末尾的。</p>
<p>You can also embed<span> </span><code class="highlighter-rouge">if</code><span> </span>statements into the list comprehension - check out<span> </span><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions">this reference</a><span> </span>to help you out. There are many examples and a better explanation than I can ever give.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">你也可以將if語句嵌入列表推導中-請查閱此參考資料以幫助你。有許多例子能比我提供出更好的解釋。<br/></span></pre>
<p><strong>Happy coding!</strong></p>
<p><strong>練習加油!!</strong></p>
<p><b>個人練習成果:</b></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">a = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
b = []
for num in a:
    if num % 2 == 0:
        a.append(num)
        
print(b)</pre>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container"></div>
<h2>8.Rock paper sciorrs(剪刀石頭布)</h2>
<p><span style="color: #ff6600; background-color: #000000;">Kaggle</span>:<a href="https://www.kaggle.com/gg542466/hw3-8/edit">https://www.kaggle.com/gg542466/hw3-8/edit</a></p>
<p>Make a two-player Rock-Paper-Scissors game. (<em>Hint: Ask for player plays (using<span> </span><code class="highlighter-rouge">input</code>), compare them, print out a message of congratulations to the winner, and ask if the players want to start a new game</em>)</p>
<p><span style="color: #ff6600;">請做出有兩個玩家的猜拳遊戲,(提示:要求可以與玩家互動(<span style="background-color: #000000;">使用input</span>),並比較它們,列印出恭喜勝利者的訊息,然後詢問玩家是否想要開始新的遊戲)。</span></p>
<p>Remember the rules:</p>
<p><span>編碼的規則:</span></p>
<p>1.Rock beats scissors</p>
<p><span>石頭</span><span>贏剪</span><span>刀</span></p>
<p>2.Scissors beats paper</p>
<p><span>剪刀贏布</span></p>
<p>3.Paper beats rock</p>
<p><span>布贏石頭</span></p>
<p></p>
<p>Discussion(<span>討論</span>)</p>
<p>Concepts for this week:</p>
<p><span>這周會用到的概念有:</span></p>
<p><span style="color: #ff6600;">1.While loops</span></p>
<p><span style="color: #ff6600;">2.Infinite loops</span></p>
<p><span style="color: #ff6600;">3.Break statements(拆解陳述)</span></p>
<p></p>
<p><span style="background-color: #ff99cc; color: #000000;"><strong>While loops</strong></span></p>
<p>We have already discussed<span> </span><code class="highlighter-rouge">for</code><span> </span>loops, or loops that look sequentially (one by one) at elements in a list. There is a second type of loop that works in a slightly different way called a<span> </span><code class="highlighter-rouge">while</code><span> </span>loop.</p>
<p><span lang="zh-TW">我們已經討論過for循環，或循環（一個個看）列表中元素的循環。還有另一種類型的循環，其工作方式稍有不同，稱為while循環。</span></p>
<p>The idea is simple: while a certain condition is<span> </span><code class="highlighter-rouge">True</code>, keep doing something. For example:</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">這個是個很簡單的想法：當某個條件為True時，就繼續做某事。例如：</span></pre>
<p><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span> <span class="k">while</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">):</span> <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="n">a</span> <span class="o">-=</span> <span class="mi">1</span></p>
<p>The output of this code segment is</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">則該代碼段</span><span lang="zh-TW">輸出</span><span lang="zh-TW">的是</span></pre>
</div>
<p>5</p>
<p>4</p>
<p>3</p>
<p>2</p>
<p>1</p>
<p>A particularly useful way to use<span> </span><code class="highlighter-rouge">while</code><span> </span>loops is checking user input for correctness. For example:</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">使用while循環的一種特別有用的方法是檢查用戶輸入的正確性。例如：</span></pre>
</div>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">quit</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">'Type "enter" to quit:'</span> <span class="p">)</span>
  <span class="k">while</span> <span class="n">quit</span> <span class="o">!=</span> <span class="s">"enter"</span><span class="p">:</span>
    <span class="n">quit</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">'Type "enter" to quit:'</span> <span class="p">)</span></code></pre>
</figure>
<p>The uses for this are infinite, and can (and should!) be combined with conditionals to yield the most efficient results.</p>
<p><span lang="zh-TW">此方法的用途是無限的，並且可以（和應該！）與條件條件結合使用以產生最有效的結果。</span></p>
<p id="infinite-loops"><span style="color: #000000; background-color: #ff99cc;"><strong>Infinite loops(<b>無限循環</b>)</strong></span></p>
<p>An infinite loop is a loop that never stops. This means that the condition in the beginning of the while loop will always be true.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">無限循環是永不停止的循環。這意味著while循環開始時的條件將始終為true。</span></pre>
</div>
<p>For example:</p>
<p>舉個例子:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">i</span> <span class="o">=</span> <span class="mi">5</span>
  <span class="k">while</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Inside the loop"</span><span class="p">)</span></code></pre>
</figure>
<p>What will happen is the loop will print out the phrase “Inside the loop” forever and ever. If you are running your computer, you will have to “kill the program” to stop it. Each operating system has a different way of “killing a program” to get out of an infinite loop.</p>
<p>這樣做的話，循環將永遠打印出短語“ Inside the loop”。如果您正在運行計算機，則必須“殺死該程序”以將其停止。每個操作系統都有不同的“殺死程序”以擺脫無限循環的方式。</p>
<p>On Linux: in the terminal, type “CTRL-C” to kill the program that is currently running in the terminal. If you are using the IDLE Python IDE, then you must press “CTRL-D” to exit your running program. When in doubt, do a Google search before you start programming!</p>
<p>在Linux上：在終端中，鍵入“ CTRL-C”以終止終端中當前正在運行的程序。如果使用的是IDLE Python IDE，則必須按“ CTRL-D”退出正在運行的程序。如有疑問，請在開始編程之前進行Google搜索！</p>
<p>On Windows: type “CTRL-ALT-DEL” and open the task manager to kill the program.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">在Windows上：鍵入“ CTRL-ALT-DEL”並打開任務管理器以終止程序。</span></pre>
</div>
<div class="tw-ta-container hide-focus-ring tw-nfl">On Mac: right-click on the task, and kill the program that is running forever.</div>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">在Mac上：右鍵單擊該任務，然後終止永久運行的程序。</span></pre>
</div>
<p>If you find yourself in an infinite loop, your program will never end.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">如果發現自己陷入無限循環，則程序將永遠不會結束。<br/></span></pre>
<p><span style="color: #000000; background-color: #ff99cc;"><strong>Break statements(拆解陳述)</strong></span></p>
<p>A<span> </span><code class="highlighter-rouge">break</code><span> </span>statement stops the execution of a loop before the original condition is met. While the use of a<span> </span><code class="highlighter-rouge">break</code><span> </span>statement will often start an argument about good coding practices, sometimes it is useful.</p>
<p>break語句<span>會</span>在滿足原始條件之前停止執行循環。儘管使用break語句通常會引發有關良好編碼實踐的爭論，但有時它很有用。</p>
<p>For example:</p>
<p>舉個例子:</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span> 
    <span class="n">usr_command</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter your command: "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">usr_command</span> <span class="o">==</span> <span class="s">"quit"</span><span class="p">:</span>
      <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span> 
      <span class="k">print</span><span class="p">(</span><span class="s">"You typed "</span> <span class="o">+</span> <span class="n">usr_command</span><span class="p">)</span></code></pre>
</figure>
<p>In this case, the<span> </span><code class="highlighter-rouge">break</code><span> </span>statement is used to break off the “infinite while loop” that we have constructed with the<span> </span><code class="highlighter-rouge">while True</code><span> </span>statement.</p>
<div class="tw-ta-container hide-focus-ring tw-lfl" id="tw-target-text-container" tabindex="0">
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">在這種情況下，break語句用於中斷我們使用while True語句構建的“ while循環無限”。</span></pre>
</div>
<strong>Happy coding!</strong>
<p><strong>編碼加油!!</strong></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span style="background-color: #ff6600;"><strong>個人答題結果:</strong></span></pre>
</div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sys

PlayerA = input("pleace enter your name:")
PlayerB = input("and your name?:")
PlayerA_says = input("%s, Which chooses do you like playerA ?rock,paper or scissors?" % PlayerA)
PlayerB_says= input("%s, Now is your turn playerB rock,paper or scissors?" % PlayerB)

def compare(PlayerA, PlayerB):
    if PlayerA == PlayerB:
            return("It's a tie,pleace try again")
    elif PlayerA == "rock":
            if PlayerB == "scissors":
                    return("Congratulations!rock win!")
            else:
                    return("Congratulations!paper win!")
    elif PlayerA == "scissors":
            if PlayerB == "paper":
                    return("Congratulations!scissors win!")
            else:
                    return("Congratulations!rock win!")
    elif PlayerA == "paper":
            if PlayerB == "rock":
                    return("Congratulations!rock win!")
            else:
                    return("Congratulations!scissors win!")
    else:
            return("error input! pleace enter rock,paper or scissors again!")
            sys.exit()
        
print(compare(PlayerA_says, PlayerB_says))
</pre>
<p></p><h2>17.Decode a web page(解碼網站)</h2>
<p><span>Use the </span><code class="highlighter-rouge">BeautifulSoup</code><span><span> </span>and<span> </span></span><code class="highlighter-rouge">requests</code><span><span> </span>Python packages to print out a list of all the article titles on the </span><a href="https://www.nytimes.com/" title="https://www.nytimes.com/">New York Times homepage<span>.</span></a></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" style="color: #ff6600;"><span style="background-color: #000000;">使用BeautifulSoup</span>並請求Python程序包在《紐約時報》主頁上列出所有文章標題的列表。<br/><br/></span><span style="color: #000000; background-color: #ff99cc;"><strong>Discussion(討論)<br/></strong></span></pre>
<p>Concepts for this week:</p>
<p>這週會應用到的有:</p>
<ul>
<li><span style="color: #ff6600;">Libraries(檔案庫)</span></li>
<li><span style="color: #ff6600;"><code class="highlighter-rouge">requests(要求)</code></span></li>
<li><span style="color: #ff6600;"><code class="highlighter-rouge">BeautifulSoup</code></span></li>
</ul>
<p><span style="background-color: #ff99cc; color: #000000;"><strong>Libraries</strong></span></p>
<p>Many people have written libraries in Python that do not come with the standard distribution of Python (like the<span> </span><code class="highlighter-rouge">random</code><span> </span>library mentioned<span> </span><a href="https://www.practicepython.org/exercise/2014/04/02/09-guessing-game-one.html">in a previous post</a>). These libraries can do anything from machine learning to date and time formatting to meme generation. If you have a task you need done, most likely someone has written a library for it.</p>
<p><span lang="zh-TW">許多人都使用Python編寫了一些資料庫，這些<span>資料</span>庫不是Python的標準發行版所附帶的（例如前一篇文章中提到的隨機庫）。這些<strong><span>資料</span></strong>庫可以執行從機器學習到日期和時間格式化到模因生成的所有操作。如果你有需要完成的任務，很可能會有人為它編寫了一個<span>資料</span>庫。</span></p>
<p>There are three main things to keep in mind when using a library:</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">使用資料庫時，要牢記三件事:<br/></span>1.You need to install it. Installation in GNU/Linux based systems will generally be easier than on Windows or OSX, but there will always be documentation for how to do it.</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">你會需要安裝它。在基於GNU / Linux的系統上的安裝通常比在Windows或OSX上更容易，但是會有關於如何執行的文檔。</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">2.You need to import it. At the top of your program, make sure you write the line<span> </span><code class="highlighter-rouge">import requests</code>, or whatever the name of your library is. Then you can use it to your heart’s content.</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">你需要導入它。在程序的頂部，請確保您編寫了一行導入請求，或是輸入你的資料庫名稱。然後，你可以使用它來滿足您的需求。</span></p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">3.You need to read documentation. Someone else wrote it, so the rules might not be so obvious. Anyone (or any group) that writes a Python package writes documentation for it. Eventually, reading documentation will become second nature.</p>
<p class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr">你需要閱讀<span lang="zh-TW">文件資料</span>。其他人也會編輯，所以規則可能不會那麼明顯。編寫Python程序包的任何人(或任何小組)都會為其編寫文檔。最終，閱讀文檔將<span>習慣成自然</span>。</p>
<p><strong><span style="color: #000000; background-color: #ff99cc;">Requests</span></strong></p>
<p>One of the most useful libraries written for Python recently,<span> </span><a href="http://docs.python-requests.org/en/latest/">requests</a><span> </span>does “HTTP for humans.” What this means in laymen’s terms is that it asks the internet things from Python. When you type “<a class="vglnk" href="http://facebook.com/" rel="nofollow"><span>facebook</span><span>.</span><span>com</span></a>” into the browser, you are asking the internet to show you Facebook’s homepage.</p>
<p><span lang="zh-TW">最近Python編寫的最有用的資料庫之一為，請求執行“人類HTTP”。用外行的話來說，這意味著它將向Python詢問互聯網問題。在瀏覽器中輸入“ facebook.com”時，你是在要求互聯網顯示Facebook主頁。</span></p>
<p>In the same way, a program can ask the internet something. It might not be “show me Facebook”, but you can for example ask Github for a list of all the repositories that the user “mprat” has. You can do this with an <span style="background-color: #ff99cc;">API (Application Programming Interface)</span>. This exercise doesn’t use APIs, so we’ll talk more about those in a later post.</p>
<p>同樣，程序可以向互聯網詢問一些信息。它可能不是“向我顯示Facebook”，但是你可以做個測試來要求Github提供用戶“ mprat”擁有的所有存儲庫的列表。你可以使用API（應用程序編程接口）來執行此操作。本練習不使用<span style="background-color: #ff99cc;">應用程式介面</span>，因此我們將在以後的文章中進一步討論。</p>
<div class="tw-ta-container hide-focus-ring tw-nfl" id="tw-target-rmn-container">Back to showing the user a webpage. When I type “<a class="vglnk" href="http://facebook.com/" rel="nofollow"><span>facebook</span><span>.</span><span>com</span></a>” into the browser, Facebook sends my browser a bunch of HTML (basically, code for how the website looks). The browser then takes this HTML and shows it to me in a pretty way. (Fun fact: to see the HTML of any page in a browser, right click on the page and “Inspect Element” or “View Source” depending on your browser. In Chrome, “Inspect Element” will pop up a module at the bottom of your page where you can see the HTML from the page. This trick will come in handy when you’re doing the exercise. If you need to DO anything with this HTML, better to use a program. More posts about this coming later.) If I want to “see” a webpage with a program, all I need to do is ask it for it’s HTML and read it</div>
<div class="tw-ta-container hide-focus-ring tw-nfl"></div>
<div class="tw-ta-container hide-focus-ring tw-nfl">返回向用戶顯示網頁。當我在瀏覽器中鍵入“ facebook.com”時，Facebook向我的瀏覽器發送了一堆HTML（基本上是網站外觀的代碼）。然後瀏覽器將這個HTML並以漂亮的方式顯示給我。 （一個有趣的事實：要在瀏覽器中查看任何頁面的HTML，請右鍵單擊該頁面，然後根據你的瀏覽器單擊“檢查元素”或“查看源代碼”。在Chrome中，“檢查元素”將在底部彈出一個模塊頁面的頂部，您可以在其中查看頁面的HTML。在進行練習時，此技巧會派上用場。如果您需要使用此HTML做任何事情，最好使用一個程序。 ）如果我想“查看”帶有程序的網頁，我所要做的就是向其索要HTML並閱讀它</div>
<p>The ‘requests’ library does half of that job: it asks (requests, if you will) a server for information. This could be just data (through an API - more later) or in the case of this exercise, HTML.</p>
<p><span lang="zh-TW">“請求”資料庫完成了一半工作：它向服務器請求（如果需要的話）信息。這可能只是數據（通過API-稍後介紹），或者在本練習中為HTML。</span></p>
<p>Look at the<span> </span><a href="http://docs.python-requests.org/en/latest/">documentation</a><span> </span>for all the details you need. In this particular latest version, all you need to do to ask a website for it’s HTML is:</p>
<p>查看文件檔以獲取所需的所有詳細信息。在此特定的最新版本中，向網站詢問其HTML所需要做的就是：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
  url = 'http://github.com'
  r = requests.get(url)
  r_html = r.text</pre>
<p>Now inside the variable<span> </span><code class="highlighter-rouge">r_html</code>, you have the HTML of the page as a string. Reading (otherwise called<span> </span>parsing) happens with a different Python package.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">現在，在變量r_html中，你必須將頁面的HTML作為字符串。讀取（其他中說法為解析）發生在其他Python資料包中。<br/><br/></span></pre>
<p><span style="background-color: #ff99cc;"><strong>BeautifulSoup</strong></span></p>
<p>To solve our problem of parsing (reading, understanding, interpreting) the string of HTML we got from<span> </span><code class="highlighter-rouge">requests</code>, we use the<span> </span><a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/"><code class="highlighter-rouge">BeautifulSoup</code></a><span> </span>library.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW">為了解決解析（閱讀，理解，</span>解釋過程<span lang="zh-TW">）從請求中獲得的HTML字符串的問題，我們使用BeautifulSoup資料庫。</span></pre>
<p>What it does is give a<span> </span><em>hierarchical</em><span> </span>(a pyramid structure) to the HTML in the document. If you don’t know anything about HTML, the<span> </span><a href="http://en.wikipedia.org/wiki/HTML">Wikipedia</a><span> </span>article is a good summary. For the purposes of this exercise, you don’t need to know anything about HTML beyond being able to look at it quickly.</p>
<p>它的作用是為文檔中的HTML提供階級式結構（金字塔結構）。如果你對HTML一無所知，請參閱Wikipedia文章。在本練習中，除了能夠快速查看HTML外，你不需要了解其他任何有關HTML的知識。</p>
<p>Because<span> </span><code class="highlighter-rouge">BeautifulSoup</code><span> </span>takes care of interpreting our HTML for us, we can ask it things like: “give me all the lines with<span> </span><code class="highlighter-rouge">&lt;p&gt;</code><span> </span>tags” or “find me the parent element to the<span> </span><code class="highlighter-rouge">&lt;title&gt;</code><span> </span>element”, etc.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">因為BeautifulSoup會負責為我們解釋HTML，所以我們可以提出類似的要求："給我所有帶有&lt;p&gt;標籤的行列"或"為母元素找到&lt;title&gt;元素"，等等。
</span></pre>
<p>Your code would look something like this:</p>
<p>你寫出的編碼將會像這樣:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from bs4 import BeautifulSoup

  # some requests code here for getting r_html 

  soup = BeautifulSoup(r_html)
  title = soup.find('span', 'articletitle').string</pre>
<p>And you can do many more things in<span> </span><code class="highlighter-rouge">BeautifulSoup</code>, but I will leave you to explore those by yourself or through other later exercises.</p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">你也可以在BeautifulSoup中做更多的事情，但是我將會讓你自己或通過其他後續練習來探索這些內容。</span></pre>
<p><strong>Happy coding!</strong></p>
<p><b>練習加油!!</b></p>
<p></p>